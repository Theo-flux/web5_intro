"use strict";
module.exports = validate42;
module.exports.default = validate42;
const schema12 = { "$ref": "#/definitions/FilterV2", "$schema": "http://json-schema.org/draft-07/schema#", "definitions": { "FilterV2": { "additionalProperties": false, "properties": { "const": { "$ref": "#/definitions/OneOfNumberString" }, "enum": { "items": { "$ref": "#/definitions/OneOfNumberString" }, "type": "array" }, "exclusiveMaximum": { "$ref": "#/definitions/OneOfNumberString" }, "exclusiveMinimum": { "$ref": "#/definitions/OneOfNumberString" }, "format": { "type": "string" }, "formatExclusiveMaximum": { "type": "string" }, "formatExclusiveMinimum": { "type": "string" }, "formatMaximum": { "type": "string" }, "formatMinimum": { "type": "string" }, "maxLength": { "type": "number" }, "maximum": { "$ref": "#/definitions/OneOfNumberString" }, "minLength": { "type": "number" }, "minimum": { "$ref": "#/definitions/OneOfNumberString" }, "not": { "type": "object" }, "pattern": { "type": "string" }, "type": { "type": "string" } }, "required": ["type"], "type": "object" }, "OneOfNumberString": { "type": ["number", "string"] } } };
const schema13 = { "additionalProperties": false, "properties": { "const": { "$ref": "#/definitions/OneOfNumberString" }, "enum": { "items": { "$ref": "#/definitions/OneOfNumberString" }, "type": "array" }, "exclusiveMaximum": { "$ref": "#/definitions/OneOfNumberString" }, "exclusiveMinimum": { "$ref": "#/definitions/OneOfNumberString" }, "format": { "type": "string" }, "formatExclusiveMaximum": { "type": "string" }, "formatExclusiveMinimum": { "type": "string" }, "formatMaximum": { "type": "string" }, "formatMinimum": { "type": "string" }, "maxLength": { "type": "number" }, "maximum": { "$ref": "#/definitions/OneOfNumberString" }, "minLength": { "type": "number" }, "minimum": { "$ref": "#/definitions/OneOfNumberString" }, "not": { "type": "object" }, "pattern": { "type": "string" }, "type": { "type": "string" } }, "required": ["type"], "type": "object" };
const func4 = Object.prototype.hasOwnProperty;
const schema14 = { "type": ["number", "string"] };
function validate44(data, { instancePath = "", parentData, parentDataProperty, rootData = data } = {}) { let vErrors = null; let errors = 0; if ((!(typeof data == "number")) && (typeof data !== "string")) {
    const err0 = { instancePath, schemaPath: "#/type", keyword: "type", params: { type: schema14.type }, message: "must be number,string", schema: schema14.type, parentSchema: schema14, data };
    if (vErrors === null) {
        vErrors = [err0];
    }
    else {
        vErrors.push(err0);
    }
    errors++;
} validate44.errors = vErrors; return errors === 0; }
function validate43(data, { instancePath = "", parentData, parentDataProperty, rootData = data } = {}) { let vErrors = null; let errors = 0; if (data && typeof data == "object" && !Array.isArray(data)) {
    if (data.type === undefined) {
        const err0 = { instancePath, schemaPath: "#/required", keyword: "required", params: { missingProperty: "type" }, message: "must have required property '" + "type" + "'", schema: schema13.required, parentSchema: schema13, data };
        if (vErrors === null) {
            vErrors = [err0];
        }
        else {
            vErrors.push(err0);
        }
        errors++;
    }
    for (const key0 in data) {
        if (!(func4.call(schema13.properties, key0))) {
            const err1 = { instancePath, schemaPath: "#/additionalProperties", keyword: "additionalProperties", params: { additionalProperty: key0 }, message: "must NOT have additional properties", schema: false, parentSchema: schema13, data };
            if (vErrors === null) {
                vErrors = [err1];
            }
            else {
                vErrors.push(err1);
            }
            errors++;
        }
    }
    if (data.const !== undefined) {
        if (!(validate44(data.const, { instancePath: instancePath + "/const", parentData: data, parentDataProperty: "const", rootData }))) {
            vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);
            errors = vErrors.length;
        }
    }
    if (data.enum !== undefined) {
        let data1 = data.enum;
        if (Array.isArray(data1)) {
            const len0 = data1.length;
            for (let i0 = 0; i0 < len0; i0++) {
                if (!(validate44(data1[i0], { instancePath: instancePath + "/enum/" + i0, parentData: data1, parentDataProperty: i0, rootData }))) {
                    vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);
                    errors = vErrors.length;
                }
            }
        }
        else {
            const err2 = { instancePath: instancePath + "/enum", schemaPath: "#/properties/enum/type", keyword: "type", params: { type: "array" }, message: "must be array", schema: schema13.properties.enum.type, parentSchema: schema13.properties.enum, data: data1 };
            if (vErrors === null) {
                vErrors = [err2];
            }
            else {
                vErrors.push(err2);
            }
            errors++;
        }
    }
    if (data.exclusiveMaximum !== undefined) {
        if (!(validate44(data.exclusiveMaximum, { instancePath: instancePath + "/exclusiveMaximum", parentData: data, parentDataProperty: "exclusiveMaximum", rootData }))) {
            vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);
            errors = vErrors.length;
        }
    }
    if (data.exclusiveMinimum !== undefined) {
        if (!(validate44(data.exclusiveMinimum, { instancePath: instancePath + "/exclusiveMinimum", parentData: data, parentDataProperty: "exclusiveMinimum", rootData }))) {
            vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);
            errors = vErrors.length;
        }
    }
    if (data.format !== undefined) {
        let data5 = data.format;
        if (typeof data5 !== "string") {
            const err3 = { instancePath: instancePath + "/format", schemaPath: "#/properties/format/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.format.type, parentSchema: schema13.properties.format, data: data5 };
            if (vErrors === null) {
                vErrors = [err3];
            }
            else {
                vErrors.push(err3);
            }
            errors++;
        }
    }
    if (data.formatExclusiveMaximum !== undefined) {
        let data6 = data.formatExclusiveMaximum;
        if (typeof data6 !== "string") {
            const err4 = { instancePath: instancePath + "/formatExclusiveMaximum", schemaPath: "#/properties/formatExclusiveMaximum/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.formatExclusiveMaximum.type, parentSchema: schema13.properties.formatExclusiveMaximum, data: data6 };
            if (vErrors === null) {
                vErrors = [err4];
            }
            else {
                vErrors.push(err4);
            }
            errors++;
        }
    }
    if (data.formatExclusiveMinimum !== undefined) {
        let data7 = data.formatExclusiveMinimum;
        if (typeof data7 !== "string") {
            const err5 = { instancePath: instancePath + "/formatExclusiveMinimum", schemaPath: "#/properties/formatExclusiveMinimum/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.formatExclusiveMinimum.type, parentSchema: schema13.properties.formatExclusiveMinimum, data: data7 };
            if (vErrors === null) {
                vErrors = [err5];
            }
            else {
                vErrors.push(err5);
            }
            errors++;
        }
    }
    if (data.formatMaximum !== undefined) {
        let data8 = data.formatMaximum;
        if (typeof data8 !== "string") {
            const err6 = { instancePath: instancePath + "/formatMaximum", schemaPath: "#/properties/formatMaximum/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.formatMaximum.type, parentSchema: schema13.properties.formatMaximum, data: data8 };
            if (vErrors === null) {
                vErrors = [err6];
            }
            else {
                vErrors.push(err6);
            }
            errors++;
        }
    }
    if (data.formatMinimum !== undefined) {
        let data9 = data.formatMinimum;
        if (typeof data9 !== "string") {
            const err7 = { instancePath: instancePath + "/formatMinimum", schemaPath: "#/properties/formatMinimum/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.formatMinimum.type, parentSchema: schema13.properties.formatMinimum, data: data9 };
            if (vErrors === null) {
                vErrors = [err7];
            }
            else {
                vErrors.push(err7);
            }
            errors++;
        }
    }
    if (data.maxLength !== undefined) {
        let data10 = data.maxLength;
        if (!(typeof data10 == "number")) {
            const err8 = { instancePath: instancePath + "/maxLength", schemaPath: "#/properties/maxLength/type", keyword: "type", params: { type: "number" }, message: "must be number", schema: schema13.properties.maxLength.type, parentSchema: schema13.properties.maxLength, data: data10 };
            if (vErrors === null) {
                vErrors = [err8];
            }
            else {
                vErrors.push(err8);
            }
            errors++;
        }
    }
    if (data.maximum !== undefined) {
        if (!(validate44(data.maximum, { instancePath: instancePath + "/maximum", parentData: data, parentDataProperty: "maximum", rootData }))) {
            vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);
            errors = vErrors.length;
        }
    }
    if (data.minLength !== undefined) {
        let data12 = data.minLength;
        if (!(typeof data12 == "number")) {
            const err9 = { instancePath: instancePath + "/minLength", schemaPath: "#/properties/minLength/type", keyword: "type", params: { type: "number" }, message: "must be number", schema: schema13.properties.minLength.type, parentSchema: schema13.properties.minLength, data: data12 };
            if (vErrors === null) {
                vErrors = [err9];
            }
            else {
                vErrors.push(err9);
            }
            errors++;
        }
    }
    if (data.minimum !== undefined) {
        if (!(validate44(data.minimum, { instancePath: instancePath + "/minimum", parentData: data, parentDataProperty: "minimum", rootData }))) {
            vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);
            errors = vErrors.length;
        }
    }
    if (data.not !== undefined) {
        let data14 = data.not;
        if (!(data14 && typeof data14 == "object" && !Array.isArray(data14))) {
            const err10 = { instancePath: instancePath + "/not", schemaPath: "#/properties/not/type", keyword: "type", params: { type: "object" }, message: "must be object", schema: schema13.properties.not.type, parentSchema: schema13.properties.not, data: data14 };
            if (vErrors === null) {
                vErrors = [err10];
            }
            else {
                vErrors.push(err10);
            }
            errors++;
        }
    }
    if (data.pattern !== undefined) {
        let data15 = data.pattern;
        if (typeof data15 !== "string") {
            const err11 = { instancePath: instancePath + "/pattern", schemaPath: "#/properties/pattern/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.pattern.type, parentSchema: schema13.properties.pattern, data: data15 };
            if (vErrors === null) {
                vErrors = [err11];
            }
            else {
                vErrors.push(err11);
            }
            errors++;
        }
    }
    if (data.type !== undefined) {
        let data16 = data.type;
        if (typeof data16 !== "string") {
            const err12 = { instancePath: instancePath + "/type", schemaPath: "#/properties/type/type", keyword: "type", params: { type: "string" }, message: "must be string", schema: schema13.properties.type.type, parentSchema: schema13.properties.type, data: data16 };
            if (vErrors === null) {
                vErrors = [err12];
            }
            else {
                vErrors.push(err12);
            }
            errors++;
        }
    }
}
else {
    const err13 = { instancePath, schemaPath: "#/type", keyword: "type", params: { type: "object" }, message: "must be object", schema: schema13.type, parentSchema: schema13, data };
    if (vErrors === null) {
        vErrors = [err13];
    }
    else {
        vErrors.push(err13);
    }
    errors++;
} validate43.errors = vErrors; return errors === 0; }
function validate42(data, { instancePath = "", parentData, parentDataProperty, rootData = data } = {}) { let vErrors = null; let errors = 0; if (!(validate43(data, { instancePath, parentData, parentDataProperty, rootData }))) {
    vErrors = vErrors === null ? validate43.errors : vErrors.concat(validate43.errors);
    errors = vErrors.length;
} validate42.errors = vErrors; return errors === 0; }
//# sourceMappingURL=data:application/json;base64,